目录和文件格式
v0.0.3
======

目标
======
简化设计，不考虑性能和可扩展性，先快速实现原型，做出MVP。
只做50 300 500的主力股指期货。

原则
======
1 分为三个leveldb数据库：tick bar ta（技术分析，macd/diff/dea/ma30/ma60）
2 每个leveldb的key和value都固定格式，多品种和多周期数据混合保存在一起

实现
======
tick.key:string-utf8，市场id-合约id-周期-年-月-时-分-秒-毫秒
tick.value:同0.0.2，股指期货还行只有1档行情的分笔t1，用float32/float64
bar.key:市场id-合约id-周期-年-月-时-分
bar.value:同0.0.2,用float32/float64
ta.key:市场id-合约id-周期-指标类型-年-月-时-分
ta.value:float32

目录和文件格式
v0.0.2
======

目标：
1.方便目前基于品种、时段、周期混合存储
2.方便以后基于品种、时段、周期分割存储
3.读写效率
4.便于编程

原则：
1.一份元数据含两个leveldb数据库文件和一个sqlite数据库文件
2.元数据可以按目录组合
3.元数据可以自解析

实现：
meta.db:记录品种元信息，使用sqlite，便于各种联合查询
bars.db:记录交易的bar元信息，使用leveldb
ticks.db:记录交易的tick元信息，使用leveldb

meta.table：
    唯一编号(uid) uint16，内部分配，便于bars和ticks建立索引，无字面意义
    品种类型：uint8，股票 股指ETF 分级基金 股指期货 商品期货等
    交易所ID：byte(16),utf8
    交易所别名：byte(64),utf8
    品种ID：byte(16),utf8
    品种别名：byte(64),utf8

bars.key,ticks.key:uint64
    3:version,v1,有效值1-7
    16:meta.key.uid
    4:type,t1,t3,t5,m1,m5,m15,h1,d1,1-15,1-3-5档tick，各周期bar
    8:year-1900,0-255
    4:month,1-12
    5:day,1-31
    5:hour,0-23
    6:minute,0-59
    6:second,0-59
    4:ms/100,0-15
    3:notused

bars.value:这里可能会对不同的type做结构优化，比如m级别的成交量要uint32
    开盘*1000:uint32
    最高*1000:uint32
    最低*1000:uint32
    收盘*1000:uint32
    成交量:uint32(?uint64)
    成交额*1000:uint64
    成交笔/持仓量:int32(?uint64)

ticks.value:这里可能会对不同的type做结构优化,比如t1只有1档 t5有5档行情
    最新价*1000:uint32
    成交量:uint32(?uint64)
    成交额*1000:uint64
    成交笔/持仓量:int32(?uint54)
    申买价*1000 1-5:uint32
    申卖价*1000 1-5:uint32
    申买量1-5:uint32
    申卖量1-5:uint32
    当日均价*1000:uint32

备注：
1. 金额类由float改成了int，这样的好处需要确认。
2. 时间类需要考虑世界时间之间的时差，这里存储GMT UTC？
3. 字节序需要考虑吗？需要保存为网络字节序？

===============================================================================
目录和文件格式
v0.0.1
=========

目录：
=========
data\市场id\证券id\周期

市场id的值和意义：
sh：上交所

证券id的值和意义：
510300: 浦发银行

周期的值和其意义：
t1:分笔tick数据(注股票：2007.5.12后的分笔是3秒一推，5档盘口，有成交笔数）
t2:逐笔tick数据
m1:1分钟bar数据（bar数据，应该遍历分笔tick数据来计算得到）
m5:5分钟bar数据
d1:1天bar数据
w1:1周bar数据
o1:1月bar数据（m已经被用了，不想用大写字母，就用了month的第二个字母）
y1:1年bar数据

文件：
=========
data.db
config.ini

data.db内容：用leveldb来存储
=========
key=value

key数据格式：utf8字符串，
    年-月-时-分-秒-毫秒或int16-int8-int8-int8-int8-int16或int64
bar数据格式，二进制：
    开盘(float32)，最高(float32)，最低(float32)，收盘(float32) ，
    成交量(int32)，成交额(float64)，成交笔/持仓量(int32)
分笔数据格式，二进制：
    最新价(float32),成交量(int32),成交额(float64),成交笔/持仓量(int32),
    申买价1-5(float32),申卖价1-5(float32),
    申买量1-5(int32),申卖量1-5(int32),当日均价(float32)
逐笔数据格式，二进制：待研究

config.ini内容：也可以在data.db里面加入两个特殊key，但这样太丑陋，也破坏了遍历
=========
[key]
begin=年-月-时-分-秒-毫秒
end=年-月-时-分-秒-毫秒

备注：
==========
格式描述用如下基础类型
字符串：string-utf8
整形：int8 int16 int32 int64
浮点：float32 float64
