服务器协议
v0.0.2
======

目标
===
简化设计，不考虑性能和可扩展性，先快速实现原型，做出MVP。
只做50/300/500的金融期货的主力合约。

原则
===
1 分为三部分，交易服务，行情服务，策略服务
2 交易服务和行情服务，可以独立运行，并提供rpc/protobuf
3 策略服务做到语言无关
4 策略服务不保存任何数据，行情由行情服务保存，持单和任务由
交易服务管理
5 交易/策略服务能应对死机、停电等异常情况
6 交易服务可以切换为手动模式

实现
===
行情服务：简化为ctp只是行情服务器的补数据途径，行情服务只提供
  pull服务，并直接从行情数据库读取；由ctp接收器接收并清理计算
  后写入。也可以为其他方法补数据来用。也就是没有0.0.1里的实时/
  历史行情服务了，只有一种之前的历史行情服务。
交易服务：任务管理/持单（orderlist）管理，不细说，模型p528里有。
策略服务：拉取行情，修改持单（orderlist）,不细说，模型p528里有。

行情服务器协议
v0.0.1
======

目标
===
1.提供策略 交易的实时和历史数据
2.提供策略测试的历史数据
3.便于编程

原则
===
1.基于rpc实现，采用grpc/protobuf实现
2.分成实时服务和历史服务，可以单独提供服务
3.做成微服务方式，能分割就分割，最好不要带状态

实现
===
quotegater：实时服务
quotelogger：历史服务

quotegater
===
提供当天的实时行情，包括tick/bar数据的订阅推送，包括补齐，
使用stream方式实现，订阅方提供起始位置，如果为0就从当天的
第一笔数据开始传，类似有设计但没有实现的ctp stream。
按品种订阅，具体订阅包括t1/t3/t5和m1/m5/m15/h1等小于1天的bar。
tick和bar用同一个stream推送，还是用两个stream推送，待设计，
（目前倾向用两个stream，保证不影响tick的接收和转发，订阅方
实现ontick/onbar类似的接口。
保存当日的数据，按data_format格式，便于quotelogger盘后导入；
这些元数据数据也可以用sqlite存储)

quotelogger
===
提供当日之前的历史行情tick/bar的拉取/查询服务，查询端调用gettick/
getbar类似的接口。
提供数据导入的接口或者工具，便于盘后导入quotegater的当日数据。
(完)
